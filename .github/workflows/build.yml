name: Build Application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
        application: [canary, zilch]
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}-${{ matrix.application }}
    runs-on: ${{ matrix.os }}
    steps:
    
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Build
      working-directory: ${{ matrix.application }}
      run: go build -v ./...

    - name: Test
      working-directory: ${{ matrix.application }}
      run: go test -v ./... -coverprofile=cover.out

    - name:
      working-directory: ${{ matrix.application }}
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.42.1
        golangci-lint run --out-format checkstyle -D deadcode,unused --build-tags=integration --timeout 10m --issues-exit-code 0 ./... | tee lint-report.xml
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v1.6
      with:
        projectBaseDir: ${{ matrix.application }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - name: Log in to the Container registry
      uses: docker/login-action@v2.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4.0.1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=ref,enable=true,priority=600,prefix=,suffix=,event=branch
          type=ref,enable=true,priority=600,prefix=,suffix=,event=tag
          type=ref,enable=true,priority=600,prefix=pr-,suffix=,event=pr

    - name: Build and push Docker image
      uses: docker/build-push-action@v3.0.0
      with:
        context: ${{ matrix.application }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
