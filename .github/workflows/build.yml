name: Build Application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
        application: [canary]
    runs-on: ${{ matrix.os }}
    steps:
    
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build
      working-directory: ${{ matrix.application }}
      run: go build -v ./...

    - name: Test
      working-directory: ${{ matrix.application }}
      run: go test -v ./... -coverprofile=cover.out
    
    - name: Setup golangci-lint Action
      uses: nickhstr/action-setup-golangci-lint@v0.1.0


    - name:
      working-directory: ${{ matrix.application }}
      run: |
        golangci-lint run --out-format checkstyle -D deadcode,unused --build-tags=integration --timeout 10m --issues-exit-code 0 ./... | tee lint-report.xml
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      with:
        projectBaseDir: ${{ matrix.application }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
